/**
 * Table
 */

%table {
  width: 100%;
  text-align: left;

  th,
  td {
    padding: 0.75em;
    vertical-align: top;
  }
}

.table,
.type .table {
  @extend %table;
}

/**
 * Table bordered modifier
 */

%table_bordered {
  overflow: auto;
  border-spacing: 0;
  border-collapse: collapse;
  border-bottom: $table-border;

  tr {
    background-color: $table-background;
    border-top: $table-border;
  }

  th {
    padding: $table-padding;
    border: $table-border;
  }

  td {
    padding: $table-padding;
    border: $table-border;
  }
}

.table_bordered,
.type .table_bordered {
  @extend %table_bordered;
}

/**
 * Table rowed modifier
 */

%table_rowed {
  tr {
    border-top: $table-border;
  }

  th,
  td {
    border: none;
  }
}

.table_rowed,
.type .table_rowed {
  @extend %table_rowed;
}

/**
 * Table Zebra
 */

%table_zebra {
  tr:nth-child(even) {
    background-color: $table-background-alt;
  }

  thead tr {
    background-color: $table-background-alt;
  }
}

.table_zebra,
.type .table_zebra {
  @extend %table_zebra;
}

/**
 * Table Zebra Remove
 */

%table_zebra_remove {
  tr:nth-child(even) {
    background-color: $table-background;
  }

  thead tr {
    background-color: $table-background;
  }
}

.table_zebra_remove,
.type .table_zebra_remove {
  @extend %table_zebra_remove;
}

/**
 * Table responsive modifier
 */

@include media-max('md') {
  %table_responsive {
    display: block;
    text-align: left;
    border-bottom: $table-border;

    > * {
      display: block;
    }

    tr {
      display: block;
      padding: 0.5em;
      border-top: $table-border;
    }

    th,
    td {
      display: block;
      width: 100%;
      padding: 0.5em 0;
      border: none;
      border-top: 1px dashed $table-border-color;

      &:first-child {
        border-top: none;
      }
    }
  }
}

.table_responsive,
.type .table_responsive {
  @extend %table_responsive;
}
