{"version":3,"names":[],"mappings":"","sources":["src/js/app.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n'use strict';\n\nvar _component = require('./component.js');\n\nvar _component2 = _interopRequireDefault(_component);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar instance = new _component2.default();\n\ninstance.init();\n\n},{\"./component.js\":2}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n\n  'use strict';\n\n  // Init variables\n\n  var api = {};\n  var settings;\n\n  // Default settings\n  var defaults = {\n    classTrigger: 'trigger',\n    classTarget: 'target',\n    classActive: 'active'\n\n    // Private functions\n  };var run = function run() {\n    var trigger = event.target.closest('.' + settings.classTrigger);\n\n    if (trigger) {\n      close();\n      var dataModal = trigger.dataset.modal;\n      if (dataModal) {\n        open(document.getElementById(dataModal));\n      }\n      event.preventDefault();\n    }\n  };\n\n  // Public functions\n  api.init = function (options) {\n    api.destroy();\n    settings = _utility2.default.extend(defaults, options || {});\n    document.addEventListener('click', run, false);\n  };\n\n  api.destroy = function () {\n    settings = null;\n    document.removeEventListener('click', run, false);\n  };\n\n  // Return the application program interface\n  return api;\n};\n\nvar _utility = require('./utility.js');\n\nvar _utility2 = _interopRequireDefault(_utility);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n},{\"./utility.js\":3}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _class = function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, null, [{\n    key: 'hasClass',\n\n\n    /**\n     * Checks if an element has a class or not\n     * @param {Element} Element to check class(es) on\n     * @param {String} || {Array} Class(es) to check\n     * @returns {Boolean} Returns true if class exists on element, otherwise false\n     */\n    value: function hasClass(el, c) {\n\n      c = this.toArray(c);\n\n      return c.every(function (c) {\n        return el.classList.contains(c);\n      });\n    }\n\n    /**\n     * Adds a class or classes to an element\n     * @param {Element} Element to add class(es) on\n     * @param {String} || {Array} Class(es) to add\n     */\n\n  }, {\n    key: 'addClass',\n    value: function addClass(el, c) {\n\n      c = this.toArray(c);\n\n      c.forEach(function (c) {\n        el.classList.add(c);\n      });\n    }\n    /**\n     * Remove a class or classes from an element\n     * @param {Element} Element to remove class(es) from\n     * @param {String} || {Array} Class(es) to remove\n     */\n\n  }, {\n    key: 'removeClass',\n    value: function removeClass(el, c) {\n\n      c = this.toArray(c);\n\n      c.forEach(function (c) {\n        el.classList.remove(c);\n      });\n    }\n\n    /**\n     * Toggle a class or classes on an element\n     * @param {Element} Element to toggle class(es) on\n     * @param {String} || {Array} Class(es) to toggle\n     */\n\n  }, {\n    key: 'toggleClass',\n    value: function toggleClass(el, c) {\n\n      c = this.toArray(c);\n\n      c.forEach(function (c) {\n        el.classList.toggle(c);\n      });\n    }\n\n    /**\n     * Find the closest parent element based on class. This is different from the\n     * native .closest() method in that it doesn't check the current element.\n     * @param {Element} Element to start search on\n     * @param {String} || {Array} Class(es) to check for\n     * @return {Element} Closest parent element\n     */\n\n  }, {\n    key: 'closest',\n    value: function closest(el, c) {\n      while ((el = el.parentElement) && !this.hasClass(el, c)) {\n        return el;\n      }\n    }\n\n    /**\n     * Converts a string to an array. If an array is passed, it's returned as is.\n     * Anything else is returned as false.\n     * @param {String} || {Array} String to convert to an array\n     * @return {Array} Return the converted array\n     */\n\n  }, {\n    key: 'toArray',\n    value: function toArray(string) {\n\n      var array = [];\n\n      if (typeof string === 'string') {\n        array.push(string);\n      } else if (Array.isArray(string)) {\n        array = string;\n      } else {\n        return false;\n      }\n\n      return array;\n    }\n\n    /**\n     * Merge two or more objects. Returns a new object. Set the first argument\n     * to `true` for a deep or recursive merge.\n     * @param {Boolean} [Optional] If true, do a deep (or recursive) merge\n     * @param {Object} The objects to merge together; each overriding the next\n     * @returns {Object} Merged values of defaults and options\n     */\n\n  }, {\n    key: 'extend',\n    value: function (_extend) {\n      function extend() {\n        return _extend.apply(this, arguments);\n      }\n\n      extend.toString = function () {\n        return _extend.toString();\n      };\n\n      return extend;\n    }(function () {\n\n      var extended = {};\n      var deep = false;\n      var i = 0;\n      var length = arguments.length;\n\n      if (Object.prototype.toString.call(arguments[0]) === '[object Boolean]') {\n        deep = arguments[0];\n        i++;\n      }\n\n      var merge = function merge(obj) {\n        for (var prop in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n            if (deep && Object.prototype.toString.call(obj[prop]) === '[object Object]') {\n              extended[prop] = extend(true, extended[prop], obj[prop]);\n            } else {\n              extended[prop] = obj[prop];\n            }\n          }\n        }\n      };\n\n      for (; i < length; i++) {\n        var obj = arguments[i];\n        merge(obj);\n      }\n\n      return extended;\n    })\n  }]);\n\n  return _class;\n}();\n\nexports.default = _class;\n\n},{}]},{},[1])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"file":"scripts.js"}