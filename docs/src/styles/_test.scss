@use "@vrembem/core/css";
@use "@vrembem/core/theme";
@use "@vrembem/core/palette";

.test-1,
.test-2,
.test-3,
.test-4 {
  padding: 0.5em 1em;
  border: 1px solid transparent;
  border-radius: 0.25em;
}

// TEST 1
// Using core theme properties directly.

.test-1 {
  border-color: theme.get("border-color");
  background: theme.get("background");
  color: theme.get("foreground");
}

// TEST 2
// Using core theme properties as values of new properties. These end up being
// completely to the values set in :root of these custom property definitions
// and do not change based on the presence of theme classes.

@include css.set("test-2", (
  "background": theme.get("background"),
  "foreground": theme.get("foreground"),
  "border-color": theme.get("border-color")
));

.test-2 {
  border-color: css.get("test-2", "border-color");
  background: css.get("test-2", "background");
  color: css.get("test-2", "foreground");
}

// TEST 3
// Using core theme properties as values of new themes.

$theme-default: (
  "background": theme.get("background"),
  "foreground": theme.get("foreground"),
  "border-color": theme.get("border-color"),
);

@include theme.set("test-3", theme.$default, $theme-default);
@include theme.set("test-3", "dark");

.test-3 {
  border-color: theme.get("test-3", "border-color");
  background: theme.get("test-3", "background");
  color: theme.get("test-3", "foreground");
}

// TEST 4
// Using custom properties as values of new themes. Setting the default theme 
// should allow all themes to inherit those styles unless explicitly set.

// Create the default theme. All properties used in subsequent themes bust exist
// in the default.
@include theme.set("test-4", theme.$default, (
  "background": theme.get("background"),
  "foreground": theme.get("foreground"),
  "border-color": theme.get("border-color"),
  "font-family": css.get("font-family"),
  "font-size": css.get("font-size-lg")
));

// Create an empty theme class. This inherits everything from the default theme.
@include theme.set("test-4", "dark");

// Create a theme with only one property. All other properties are inherited
// from the default theme.
@include theme.set("test-4", "pink", (
  "background": pink
));

// Create a theme with all unique properties. These are used as expected.
@include theme.set("test-4", "matrix", (
  "background": black,
  "foreground": lime,
  "border-color": black,
  "font-family": css.get("font-family-mono"),
  "font-size": css.get("font-size")
));

.test-4 {
  border-color: theme.get("test-4", "border-color");
  background: theme.get("test-4", "background");
  color: theme.get("test-4", "foreground");
  font-family: theme.get("test-4", "font-family");
  font-size: theme.get("test-4", "font-size");
}
