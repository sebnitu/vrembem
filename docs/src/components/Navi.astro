---
import Icon from "../components/Icon.vue";
import { currentPage } from "../modules/currentPage";

interface Props {
  classes?: string;
  inline?: boolean;
}

const { classes = "", inline = false } = Astro.props;

let menuClasses = "menu";
menuClasses += inline ? " menu_inline" : "";
menuClasses += classes ? " " + classes : "";

const cp = currentPage(new URL(Astro.request.url).pathname, {
  classBase: "menu__action",
  classCurrent: "is-active",
  classParent: "is-active",
});
---

<ul class={menuClasses}>
  <li class="menu__item">
    <a class={cp.classes("/getting-started")} href="/getting-started"
      >Get Started</a
    >
  </li>
  <li class="menu__item">
    <a class={cp.classes("/packages")} href="/packages">Docs</a>
  </li>
  <li class="menu__item">
    <a
      class="menu__action"
      href="https://github.com/sebnitu/vrembem"
      target="_blank"
    >
      GitHub
      <Icon
        name="arrow-up-right"
        rootClass="display-inline"
        iconClass="icon_external"
      />
    </a>
  </li>
  <li class="menu__item">
    <a class="menu__action" href="#" target="_blank">
      Sponsor
      <Icon
        name="arrow-up-right"
        rootClass="display-inline"
        iconClass="icon_external"
      />
    </a>
  </li>
  {!inline && <li class="menu__sep" />}
  <li class={`menu__item${inline ? " margin-left-md" : ""}`}>
    <button id="select-dark-mode" class="button button_icon">
      <Icon name="moon" />
    </button>
    <button id="select-light-mode" class="button button_icon">
      <Icon name="sun" />
    </button>
  </li>
</ul>

<script>
  /**
   * Theme switching functionality.
   */

  // Import local store module.
  import { localStore } from "@vrembem/core";

  // Setup the local storage proxy.
  const store = localStore("VB:Profile");

  // Get the form element.
  const btnDark = document.querySelector("#select-dark-mode");
  const btnLight = document.querySelector("#select-light-mode");

  // If a local store theme preference exists...
  if (store.get("theme") != "dark") {
    btnLight.classList.add("display-none");
    btnDark.classList.remove("display-none");
  } else {
    btnDark.classList.add("display-none");
    btnLight.classList.remove("display-none");
  }

  // Dark button event listener.
  btnDark.addEventListener("click", () => {
    btnDark.classList.add("display-none");
    btnLight.classList.remove("display-none");
    store.set("theme", "dark");
    document.documentElement.classList.add("theme-dark");
    document.documentElement.classList.remove("theme-light");
  });

  // Light button event listener.
  btnLight.addEventListener("click", () => {
    btnLight.classList.add("display-none");
    btnDark.classList.remove("display-none");
    store.set("theme", "light");
    document.documentElement.classList.add("theme-light");
    document.documentElement.classList.remove("theme-dark");
  });
</script>
