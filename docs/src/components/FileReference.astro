---
import Icon from './Icon.vue';

interface Props {
  name?: string;
  file?: string;
  open?: boolean;
}

const { name, file, open = false } = Astro.props;

function makeSafeForCSS(name) {
  return name.replace(/[^a-z0-9]/g, function(s) {
    const c = s.charCodeAt(0);
    if (c == 32) return '-';
    return s.toLowerCase();
  });
}

const id = makeSafeForCSS(name);
---

<div class="file-reference">
  <div class="file-reference__toolbar">
    <div class="media media_gap-x_sm flex-align-center">
      <div class="media__obj">
        <button
          type="button" 
          id={"toggle-" + id + "-trigger"}
          data-toggle={"toggle-" + id}
          aria-controls={"toggle-" + id}
          aria-label={`Toggle ${file} file contents`}
          aria-expanded={open ? "true" : "false"}
          class="file-reference__toggle button button_icon button_size_sm"
        >
          <Icon name="chevron-right" iconClass="icon_size_sm" />
        </button>
      </div>
      <div class="media__body flex flex-gap-x flex-wrap">
        <h3 id={id} class="flex-grow-1">{name}</h3>
        <code>
          <a class="link" target="_blank" href={`https://github.com/sebnitu/vrembem/blob/next/packages/${file}`}>
            {file}
          </a>
        </code>
      </div>
    </div>
  </div>
  <div
    id={"toggle-" + id}
    aria-labelledby={"toggle-" + id + "-trigger"}
    aria-hidden={open ? "false" : "true"}
    class="file-reference__content"
  >
    <slot />
  </div>
</div>

<script>
  // Get all the file reference toggle buttons.
  const toggles = document.querySelectorAll("[data-toggle]");
  toggles.forEach((trigger) => {
    // Get the target element.
    const targetId = trigger.getAttribute("data-toggle");
    const target = document.getElementById(targetId);

    // Get the current state.
    let open = (trigger.getAttribute("aria-expanded") === 'true');

    // Set the event listener.
    trigger.addEventListener("click", () => {
      // Toggle the new state.
      open = !open;
      trigger.setAttribute("aria-expanded", open.toString());
      target.setAttribute("aria-hidden", (!open).toString());
    });
  });
</script>
