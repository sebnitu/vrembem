@use "sass:string";
@use "../utilities/escape-colon" as *;
@use "../modules/config";

/// Output a valid BEM class selector using core prefixes and the provided
/// parameters; block, element, modifier and modifier-value.
/// @param {string} $b
///   The block name.
/// @param {string} $e [null]
///   The element name.
/// @param {string} $m [null]
///   The modifier name.
/// @param {string} $v [null]
///   The modifier value name.
/// @param {string} $bp [bull]
///   A breakpoint modifier to prepend to class, e.g: `md:`.
/// @return {selector}
///   A valid BEM CSS selector using the provided parameters.
@function bem($b, $e: null, $m: null, $v: null, $bp: null) {
  $class: '#{config.get("prefix-blocks")}#{$b}';
  @if ($e) {
    $class: '#{$class}#{config.get("prefix-elements")}#{$e}';
  }
  @if ($m) {
    $class: '#{$class}#{config.get("prefix-modifiers")}#{$m}';
  }
  @if ($v) {
    $class: '#{$class}#{config.get("prefix-modifier-values")}#{$v}';
  }
  @if ($bp) {
    // Add the colon if it doesn't exist.
    @if not string.index($bp, ":") {
      $bp: "#{$bp}:";
    }

    // Escape the colon.
    $bp: escape-colon($bp);

    // Prepend the breakpoint modifier to class.
    $class: "#{$bp}#{$class}";
  }

  // Return class with as a class selector.
  @return ".#{$class}";
}
