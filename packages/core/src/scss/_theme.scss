@use "sass:map";
@use "sass:meta";

@use "./functions" as fun;
@use "./prefix";
@use "./palette";

$_v: prefix.$variable;

$mapping: (
  "background": palette.get("neutral", 100),
  "background-dark": palette.get("neutral", 98),
  "background-darker": palette.get("neutral", 95),
  "foreground": palette.get("neutral", 20),
  "foreground-light": palette.get("neutral", 40),
  "foreground-lighter": palette.get("neutral", 60),
  "border-color": rgba(black, 0.1),
  "border-color-dark": rgba(black, 0.2),
  "border-color-darker": rgba(black, 0.3),
  "shadow-color": hsl(var(--vb-neutral-hs), 20%, 20%),
) !default;

@function get($key) {
  @return map.get($mapping, $key);
}

@mixin add($key, $value: null) {
  @if (meta.type-of($key) == "map") {
    $mapping: map.merge($mapping, $key) !global;
  }
  @else {
    $mapping: map.set($mapping, $key, $value) !global;
  }
}

@mixin remove($keys...) {
  $mapping: map.remove($mapping, $keys...) !global;
}

@mixin custom-properties() {
  @each $key, $value in $mapping {
    --#{$_v}#{$key}: #{$value};
  }
}
