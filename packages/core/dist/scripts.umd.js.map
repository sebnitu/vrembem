{"version":3,"file":"scripts.umd.js","sources":["../src/js/getElement.js","../src/js/focus.js","../src/js/addClass.js","../src/js/variables.js","../src/js/camelCase.js","../src/js/transition.js","../src/js/hasClass.js","../src/js/hyphenCase.js","../src/js/moveElement.js","../src/js/removeClass.js","../src/js/accessibility.js","../src/js/toggleClass.js"],"sourcesContent":["/**\n * Get an element(s) from a selector or return value if not a string\n * ---\n * @param {String} selector - Selector to query\n * @param {Boolean} single - Whether to return a single or all matches\n */\n\nexport const getElement = function (selector, single = 0) {\n  if (typeof selector != 'string') return selector;\n  return (single) ?\n    document.querySelector(selector) :\n    document.querySelectorAll(selector);\n};\n","export const focusTarget = (target, settings) => {\n  const innerFocus = target.querySelector(\n    `[data-${settings.dataFocus}]`\n  );\n  if (innerFocus) {\n    innerFocus.focus();\n  } else {\n    const innerElement = target.querySelector('[tabindex=\"-1\"]');\n    if (innerElement) innerElement.focus();\n  }\n};\n\nexport const focusTrigger = (obj = null) => {\n  if (!obj || !obj.memory || !obj.memory.trigger) return;\n  obj.memory.trigger.focus();\n  obj.memory.trigger = null;\n};\n\nexport class FocusTrap {\n  constructor() {\n    this.target = null;\n    this.__handlerFocusTrap = this.handlerFocusTrap.bind(this);\n  }\n\n  init(target) {\n    this.target = target;\n    this.inner = this.target.querySelector('[tabindex=\"-1\"]');\n    this.focusable = this.getFocusable();\n    if (this.focusable.length) {\n      this.focusableFirst = this.focusable[0];\n      this.focusableLast = this.focusable[this.focusable.length - 1];\n      this.target.addEventListener('keydown', this.__handlerFocusTrap);\n    } else {\n      this.target.addEventListener('keydown', this.handlerFocusLock);\n    }\n  }\n\n  destroy() {\n    if (!this.target) return;\n    this.inner = null;\n    this.focusable = null;\n    this.focusableFirst = null;\n    this.focusableLast = null;\n    this.target.removeEventListener('keydown', this.__handlerFocusTrap);\n    this.target.removeEventListener('keydown', this.handlerFocusLock);\n    this.target = null;\n  }\n\n  handlerFocusTrap(event) {\n    const isTab = (event.key === 'Tab' || event.keyCode === 9);\n    if (!isTab) return;\n    if (event.shiftKey) {\n      if (\n        document.activeElement === this.focusableFirst ||\n        document.activeElement === this.inner\n      ) {\n        this.focusableLast.focus();\n        event.preventDefault();\n      }\n    } else {\n      if (\n        document.activeElement === this.focusableLast ||\n        document.activeElement === this.inner\n      ) {\n        this.focusableFirst.focus();\n        event.preventDefault();\n      }\n    }\n  }\n\n  handlerFocusLock(event) {\n    const isTab = (event.key === 'Tab' || event.keyCode === 9);\n    if (isTab) event.preventDefault();\n  }\n\n  getFocusable() {\n    const focusable = [];\n    const initFocus = document.activeElement;\n    const initScrollTop = (this.inner) ? this.inner.scrollTop : 0;\n\n    this.target\n      .querySelectorAll('a[href]:not([disabled]),button:not([disabled]),textarea:not([disabled]),input[type=\"text\"]:not([disabled]),input[type=\"radio\"]:not([disabled]),input[type=\"checkbox\"]:not([disabled]),select:not([disabled]),[tabindex]:not([tabindex=\"-1\"])')\n      .forEach((el) => {\n        el.focus();\n        if (el === document.activeElement) {\n          focusable.push(el);\n        }\n      });\n\n    if (this.inner) this.inner.scrollTop = initScrollTop;\n    initFocus.focus();\n    return focusable;\n  }\n}\n","/**\n * Adds a class or classes to an element or NodeList\n * ---\n * @param {Node || NodeList} el - Element(s) to add class(es) to\n * @param {String || Array} cl - Class(es) to add\n */\n\nexport const addClass = (el, ...cl) => {\n  el = (el.forEach) ? el : [el];\n  el.forEach((el) => {\n    el.classList.add(...cl);\n  });\n};\n","export const breakpoints = {\n  xs: '480px',\n  sm: '620px',\n  md: '760px',\n  lg: '990px',\n  xl: '1380px'\n};\n","/**\n * Takes a hyphen cased string and converts it to camel case\n * ---\n * @param {String } str - the string to convert to camel case\n * @returns {Boolean} - returns a camel cased string\n */\n\nexport const camelCase = (str) => {\n  return str.replace(/-([a-z])/g, function (g) {\n    return g[1].toUpperCase();\n  });\n};\n","export const openTransition = (el, settings) => {\n  return new Promise((resolve) => {\n    if (settings.transition) {\n      el.classList.remove(settings.stateClosed);\n      el.classList.add(settings.stateOpening);\n      el.addEventListener('transitionend', function _f() {\n        el.classList.add(settings.stateOpened);\n        el.classList.remove(settings.stateOpening);\n        resolve(el);\n        this.removeEventListener('transitionend', _f);\n      });\n    } else {\n      el.classList.add(settings.stateOpened);\n      el.classList.remove(settings.stateClosed);\n      resolve(el);\n    }\n  });\n};\n\nexport const closeTransition = (el, settings) => {\n  return new Promise((resolve) => {\n    if (settings.transition) {\n      el.classList.add(settings.stateClosing);\n      el.classList.remove(settings.stateOpened);\n      el.addEventListener('transitionend', function _f() {\n        el.classList.remove(settings.stateClosing);\n        el.classList.add(settings.stateClosed);\n        resolve(el);\n        this.removeEventListener('transitionend', _f);\n      });\n    } else {\n      el.classList.add(settings.stateClosed);\n      el.classList.remove(settings.stateOpened);\n      resolve(el);\n    }\n  });\n};\n","/**\n * Checks an element or NodeList whether they contain a class or classes\n * Ref: https://davidwalsh.name/nodelist-array\n * ---\n * @param {Node} el - Element(s) to check class(es) on\n * @param {String || Array} c - Class(es) to check\n * @returns {Boolean} - Returns true if class exists, otherwise false\n */\n\nexport const hasClass = (el, ...cl) => {\n  el = (el.forEach) ? el : [el];\n  el = [].slice.call(el);\n\n  return cl.some((cl) => {\n    return el.some((el) => {\n      if (el.classList.contains(cl)) return true;\n    });\n  });\n};\n","/**\n * Takes a camel cased string and converts it to hyphen case\n * ---\n * @param {String } str - the string to convert to hyphen case\n * @returns {Boolean} - returns a hyphen cased string\n */\n\nexport const hyphenCase = (str) => {\n  return str.replace(/([a-z][A-Z])/g, function (g) {\n    return g[0] + '-' + g[1].toLowerCase();\n  });\n};\n","import { getElement } from './getElement';\n\n/**\n * Moves element(s) in the DOM based on a reference and move type\n * ---\n * @param {String} target - The element(s) to move\n * @param {String} type - Move type can be 'after', 'before', 'append' or 'prepend'\n * @param {String} reference - The reference element the move is relative to\n */\n\nexport function moveElement(target, type, reference = false) {\n  if (reference) {\n    const els = getElement(target);\n    if (!els.length) throw new Error(`Move target element \"${target}\" not found!`);\n    const ref = getElement(reference, 1);\n    if (!ref) throw new Error(`Move reference element \"${reference}\" not found!`);\n    els.forEach((el) => {\n      switch (type) {\n        case 'after':\n          ref.after(el);\n          return { ref, el, type };\n        case 'before':\n          ref.before(el);\n          return { ref, el, type };\n        case 'append':\n          ref.append(el);\n          return { ref, el, type };\n        case 'prepend':\n          ref.prepend(el);\n          return { ref, el, type };\n        default:\n          throw new Error(`Move type \"${type}\" does not exist!`);\n      }\n    });\n  }\n}\n","/**\n * Remove a class or classes from an element or NodeList\n * ---\n * @param {Node || NodeList} el - Element(s) to remove class(es) from\n * @param {String || Array} cl - Class(es) to remove\n */\n\nexport const removeClass = (el, ...cl) => {\n  el = (el.forEach) ? el : [el];\n  el.forEach((el) => {\n    el.classList.remove(...cl);\n  });\n};\n","export const setInert = (state, selector) => {\n  if (selector) {\n    const els = document.querySelectorAll(selector);\n    els.forEach((el) => {\n      if (state) {\n        el.inert = true;\n        el.setAttribute('aria-hidden', true);\n      } else {\n        el.inert = null;\n        el.removeAttribute('aria-hidden');\n      }\n    });\n  }\n};\n\nexport const setOverflowHidden = (state, selector) => {\n  if (selector) {\n    const els = document.querySelectorAll(selector);\n    els.forEach((el) => {\n      if (state) {\n        el.style.overflow = 'hidden';\n      } else {\n        el.style.removeProperty('overflow');\n      }\n    });\n  }\n};\n\nexport const setTabindex = (state, selector) => {\n  if (selector) {\n    const els = document.querySelectorAll(selector);\n    els.forEach((el) => {\n      if (state) {\n        el.setAttribute('tabindex', '-1');\n      } else {\n        el.removeAttribute('tabindex');\n      }\n    });\n  }\n};\n","/**\n * Toggle a class or classes on an element or NodeList\n * ---\n * @param {Node || NodeList} el - Element(s) to toggle class(es) on\n * @param {String || Array} cl - Class(es) to toggle\n */\n\nexport const toggleClass = (el, ...cl) => {\n  el = (el.forEach) ? el : [el];\n  el.forEach((el) => {\n    cl.forEach((cl) => {\n      el.classList.toggle(cl);\n    });\n  });\n};\n"],"names":["getElement","selector","single","document","querySelector","querySelectorAll","this","target","__handlerFocusTrap","handlerFocusTrap","bind","init","inner","focusable","getFocusable","length","focusableFirst","focusableLast","addEventListener","handlerFocusLock","destroy","removeEventListener","event","key","keyCode","shiftKey","activeElement","focus","preventDefault","initFocus","initScrollTop","scrollTop","forEach","el","push","classList","add","xs","sm","md","lg","xl","str","replace","g","toUpperCase","settings","Promise","resolve","transition","stateClosing","remove","stateOpened","_f","stateClosed","innerFocus","dataFocus","innerElement","obj","memory","trigger","slice","call","some","cl","contains","toLowerCase","type","reference","els","Error","ref","after","before","append","prepend","stateOpening","state","inert","setAttribute","removeAttribute","style","overflow","removeProperty","toggle"],"mappings":"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"}