this.vrembem=this.vrembem||{},this.vrembem.core=function(a){'use strict';var b={breakpoints:{xs:"480px",sm:"620px",md:"760px",lg:"990px",xl:"1380px"}},d=function(a){var b=[];return Array.isArray(a)?b=a:b.push(a),b},e=function(a,b){return a=a.forEach?a:d(a),b=d(b),b.some(function(b){var c=!1;return a.forEach(function(a){a.classList.contains(b)&&(c=!0)}),c})};/**
   * Converts a string or object to an array. If an array is passed, it's
   * returned as is. Anything else is returned as an array.
   * ---
   * @param {Object} item - String or object to convert to an array
   * @return {Array} - Return the converted array
   */return a.addClass=function(a,b){a=a.forEach?a:d(a),b=d(b),a.forEach(function(a){b.forEach(function(b){a.classList.add(b)})})},a.closest=function(a,b){for(;(a=a.parentElement)&&!e(a,b);)return a},a.config=b,a.extend=function a(){var b={},c=!1,d=0,e=arguments.length;"[object Boolean]"===Object.prototype.toString.call(0>=arguments.length?void 0:arguments[0])&&(c=0>=arguments.length?void 0:arguments[0],d++);for(var f,g=function(d){for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(b[e]=c&&"[object Object]"===Object.prototype.toString.call(d[e])?a(!0,b[e],d[e]):d[e])};d<e;d++)f=0>d||arguments.length<=d?void 0:arguments[d],g(f);return b},a.getBreakpoint=function(a){return b.breakpoints[a]},a.hasClass=e,a.removeClass=function(a,b){a=a.forEach?a:d(a),b=d(b),a.forEach(function(a){b.forEach(function(b){a.classList.remove(b)})})},a.toArray=d,a.toggleClass=function(a,b){a=a.forEach?a:d(a),b=d(b),a.forEach(function(a){b.forEach(function(b){a.classList.toggle(b)})})},a}({});
