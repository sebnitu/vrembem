@use "@vrembem/core";
@use "@vrembem/core/css";
@use "./variables" as var;

/**
 * Drawer modal styles
 */

 #{core.bem("drawer", null, "modal")} {
  z-index: css.get("drawer", "modal-z-index", var.$modal-z-index);
  right: auto;
  left: 0;
  width: 0;
  height: 0;
  overflow: hidden;
  transform: translateX(0);

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: css.get("drawer", "screen-background", core.$screen-background);
    opacity: 0;
  }

  #{core.bem("drawer", "dialog")} {
    position: absolute;
    z-index: calc(css.get("drawer", "modal-z-index", var.$modal-z-index) + 1);
    left: 0;
    width: css.get("drawer", "modal-width", var.$modal-width);
    max-width: css.get("drawer", "modal-max-width", var.$modal-max-width);
    transform: translateX(-100%);
    border-right: css.get("drawer", "modal-border", var.$modal-border);
    background-color: css.get("drawer", "modal-background", var.$modal-background);
    box-shadow: css.get("drawer", "modal-box-shadow", var.$modal-box-shadow);
    color: css.get("drawer", "modal-foreground", var.$modal-foreground);
  }
  
  &#{core.bem("drawer", null, "switch")} {
    right: auto;
    left: 0;
    transform: translateX(0);

    #{core.bem("drawer", "dialog")} {
      right: 0;
      left: auto;
      transform: translateX(100%);
      border-left: css.get("drawer", "modal-border", var.$modal-border);
    }
  }

  #{core.bem("dialog", "header")},
  #{core.bem("dialog", "footer")} {
    border-color: css.get("drawer", "modal-sep-border-color", var.$modal-sep-border-color);
    background: css.get("drawer", "modal-background", var.$modal-background);
  }

  #{core.bem("dialog", "body")} {
    background: css.get("drawer", "modal-background", var.$modal-background);
  }
}

/**
 * Drawer modal transition
 */

#{core.bem("drawer", null, "modal")}.is-opening,
#{core.bem("drawer", null, "modal")}.is-opened,
#{core.bem("drawer", null, "modal")}.is-closing {
  width: 100%;
  max-width: 100%;
  height: 100%;
}

#{core.bem("drawer", null, "modal")}.is-opening,
#{core.bem("drawer", null, "modal")}.is-closing {
  &::before {
    transition: opacity css.get("drawer", "transition-duration", var.$transition-duration) css.get("drawer", "transition-timing-function", var.$transition-timing-function);
  }
}

#{core.bem("drawer", null, "modal")}.is-opening,
#{core.bem("drawer", null, "modal")}.is-opened {
  transform: translateX(0);

  &::before {
    opacity: css.get("drawer", "screen-opacity", core.$screen-opacity);
  }

  #{core.bem("drawer", "dialog")} {
    transform: translateX(0);
  }
}

#{core.bem("drawer", null, "modal")}.is-closing {
  transform: translateX(0);

  #{core.bem("drawer", "dialog")} {
    transform: translateX(-100%);
  }
}

#{core.bem("drawer", null, "modal")}#{core.bem("drawer", null, "switch")}.is-closing {
  transform: translateX(0);

  #{core.bem("drawer", "dialog")} {
    transform: translateX(100%);
  }
}
