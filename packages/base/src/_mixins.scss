@import "@vrembem/core/index";
@import "./variables";

@mixin heading-base() {
  color: $heading-color;
  font-family: $heading-font-family;
  font-weight: $heading-font-weight;
  line-height: $heading-line-height;
}

@mixin heading($level, $base: false) {
  @if $base {
    @include heading-base();
  }

  @if $level == 1 {
    font-size: 2em;
    @include media-min("md") {
      font-size: 2.5em;
    }
  }

  @else if $level == 2 {
    font-size: 1.75em;
    @include media-min("md") {
      font-size: 2em;
    }
  }

  @else if $level == 3 {
    font-size: 1.5em;
    @include media-min("md") {
      font-size: 1.75em;
    }
  }

  @else if $level == 4 {
    font-size: 1.25em;
    @include media-min("md") {
      font-size: 1.5em;
    }
  }

  @else if $level == 5 {
    font-size: 1em;
    @include media-min("md") {
      font-size: 1.25em;
    }
  }

  @else if $level == 6 {
    font-size: 1em;
    @include media-min("md") {
      font-size: 1.25em;
    }
  }
}

@mixin link() {
  transition: $link-transition;
  border-bottom: $link-border;
  color: $link-color;
  text-decoration: $link-text-decoration;

  &:hover {
    border-bottom: $link-border-hover;
    color: $link-color-hover;
    text-decoration: $link-text-decoration-hover;
  }

  &:focus {
    outline: currentColor dotted 1px;
    outline-offset: 3px;
    border-bottom: $link-border-hover;
    color: $link-color-hover;
    text-decoration: $link-text-decoration-hover;
  }
}

@mixin link-modifier($modifier) {
  @if $modifier == "subtle" {
    border-color: $link-subtle-border-color;
    color: $link-subtle-color;

    &:hover,
    &:focus {
      border-color: $link-subtle-border-color-hover;
      color: $link-subtle-color-hover;
    }
  }

  @else if $modifier == "invert" {
    border-color: $link-invert-border-color;
    color: $link-invert-color;

    &:hover,
    &:focus {
      border-color: $link-invert-border-color-hover;
      color: $link-invert-color-hover;
    }
  }

  @else if $modifier == "invert-subtle" {
    border-color: $link-invert-subtle-border-color;
    color: $link-invert-subtle-color;

    &:hover,
    &:focus {
      border-color: $link-invert-subtle-border-color-hover;
      color: $link-invert-subtle-color-hover;
    }
  }
}

@mixin separator() {
  display: block;
  height: 0;
  border: none;
  border-top: 1px solid $border-color;
}

@mixin list() {
  margin-left: $list-spacing;

  ul,
  ol {
    margin-left: $list-spacing;
  }

  li {
    margin: $list-item-spacing 0;
  }
}

@mixin type() {
  @include add-clearfix();
  font-family: $type-font-family;
  font-size: $type-font-size;
  line-height: $type-line-height;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    @include heading-base();
    margin-top: ($type-spacing * 1.5);
    margin-bottom: $type-spacing;
  }

  h1 {
    @include heading(1);
  }

  h2 {
    @include heading(2);
  }

  h3 {
    @include heading(3);
  }

  h4 {
    @include heading(4);
  }

  h5 {
    @include heading(5);
  }

  h6 {
    @include heading(6);
  }

  p {
    margin-top: $type-spacing;
    margin-bottom: $type-spacing;
  }

  a:not(.button) {
    @include link();
  }

  hr {
    @include separator();
    margin: $type-hr-margin;
  }

  ul,
  ol {
    @include list();
  }

  blockquote {
    margin: ($type-spacing * 1.5) 0;
    padding: ($type-spacing * 0.5) ($type-spacing * 1.5);
    border-radius: $blockquote-border-radius;
    background: $blockquote-background;
    color: $blockquote-color;
  }

  figure {
    padding: 1em;
    border: $border;

    img {
      width: 100%;
      height: auto;
    }
  }

  figcaption {
    margin: 1em 0.5em;
    color: $color-subtle;
    font-size: $font-size-sm;
    font-style: italic;
    text-align: center;

    &:first-child {
      margin-top: 0;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }

  mark {
    padding: $mark-padding;
    background-color: $mark-background;
    color: $mark-color;
  }

  code {
    padding: $code-padding;
    background: $code-background;
    color: $code-color;
    font-size: 0.9em;
    word-break: break-word;
  }

  pre {
    margin: ($type-spacing * 1.5) 0;
    padding: ($type-spacing * 1.5);
    overflow: auto;
    border-radius: $pre-border-radius;
    background: $pre-background;

    code {
      padding: 0;
      background: none;
      color: inherit;
      font-size: 1em;
    }
  }

  > *:first-child {
    margin-top: 0;
  }

  > *:last-child {
    margin-bottom: 0;
  }
}

@mixin type-invert($color: black) {
  @if (lightness($color) < $lightness-threshold) {
    color: $color-invert;

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      color: $heading-color-invert;
    }

    a:not(.button) {
      @include link();
      @include link-modifier("invert");
    }

    hr {
      background-color: $border-color-invert;
    }
  }
}
