@use "sass:list";
@use "@vrembem/core";
@use "./variables" as var;

@mixin table-responsive-styles() {
  thead,
  tbody,
  tr,
  th,
  td {
    display: block;
  }

  thead,
  [rowspan] {
    position: absolute;
    top: -9999px;
    left: -9999px;
  }

  [#{var.$mobile-label-attr}] {
    position: relative;
    padding-left: calc(#{var.$mobile-label-width} + #{list.nth(var.$padding, 2)});
    white-space: normal;

    &::before {
      @include core.overflow-ellipsis();
      content: attr(#{var.$mobile-label-attr});
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      width: var.$mobile-label-width;
      padding: var.$padding;
      background-color: var.$mobile-label-background;
      color: var.$mobile-label-color;
      font-weight: var.$mobile-label-font-weight;
    }
  }

  &#{core.bem("table", null, "size", "sm")} [#{var.$mobile-label-attr}] {
    padding-left: calc(#{var.$mobile-label-width} + #{list.nth(var.$padding-sm, 2)});

    &::before {
      padding: var.$padding-sm;
    }
  }

  &#{core.bem("table", null, "size", "lg")} [#{var.$mobile-label-attr}] {
    padding-left: calc(#{var.$mobile-label-width} + #{list.nth(var.$padding-lg, 2)});

    &::before {
      padding: var.$padding-lg;
    }
  }

  &#{core.bem("table", null, "style", "bordered")} {
    border: core.css("table-border");

    td {
      border: none;
    }

    td + td,
    th + td {
      border-top: core.css("table-border-alt");;
    }

    [#{var.$mobile-label-attr}]::before {
      border-right: core.css("table-border");
    }

    tr + tr {
      border-top: core.css("table-border");
    }
  }
}
