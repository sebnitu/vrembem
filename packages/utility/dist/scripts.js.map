{
  "version": 3,
  "sources": [
    "../../node_modules/browser-pack/_prelude.js",
    "../core/index.js",
    "../core/src/breakpoints.js",
    "dist/scripts.js",
    "index.js",
    "src/utility.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import breakpoints from \"./src/breakpoints\"\n\nexport default core = {\n  \"breakpoints\": breakpoints\n}\n",
    "export default breakpoints = {\n  \"xs\": \"480px\",\n  \"sm\": \"620px\",\n  \"md\": \"760px\",\n  \"lg\": \"990px\",\n  \"xl\": \"1380px\"\n}\n",
    "\"use strict\";\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbXX0=",
    "import Utility from \"./src/utility\"\nwindow.Utility = Utility\n",
    "import core from \"@vrembem/core\"\n\n/**\n * Utility\n * ---\n * A set of helper methods for general javascript plugin use.\n */\nexport default class {\n\n  /**\n   * Get and output a breakpoint using it\"s key found in core.json\n   * ---\n   * @param {String} key - The key to search for in the breakpoints object\n   * @returns {String} - The pixel value of the breakpoint as a string\n   */\n  static getBreakpoint(key) {\n    return core.breakpoints[key]\n  }\n\n  /**\n   * Checks if an element has a class or not\n   * ---\n   * @param {Node} el - Element(s) to check class(es) on\n   * @param {String || Array} c - Class(es) to check\n   * @returns {Boolean} - Returns true if class exists, otherwise false\n   */\n  static hasClass(el, c) {\n    el = (el.forEach) ? el : this.toArray(el)\n    c = this.toArray(c)\n    return c.some( function (c) {\n      let has = false\n      el.forEach((el) => {\n        if (el.classList.contains(c)) {\n          has = true\n        }\n      })\n      return has\n    })\n  }\n\n  /**\n   * Adds a class or classes to an element\n   * ---\n   * @param {Node} el - Element(s) to add class(es) on\n   * @param {String || Array} c - Class(es) to add\n   */\n  static addClass(el, c) {\n    el = (el.forEach) ? el : this.toArray(el)\n    c = this.toArray(c)\n    el.forEach((el) => {\n      c.forEach((c) => {\n        el.classList.add(c)\n      })\n    })\n  }\n\n  /**\n   * Remove a class or classes from an element\n   * ---\n   * @param {Node} el - Element(s) to remove class(es) from\n   * @param {String || Array} c - Class(es) to remove\n   */\n  static removeClass(el, c) {\n    el = (el.forEach) ? el : this.toArray(el)\n    c = this.toArray(c)\n    el.forEach((el) => {\n      c.forEach((c) => {\n        el.classList.remove(c)\n      })\n    })\n  }\n\n  /**\n   * Toggle a class or classes on an element\n   * ---\n   * @param {Node} el - Element(s) to toggle class(es) on\n   * @param {String || Array} c - Class(es) to toggle\n   */\n  static toggleClass(el, c) {\n    el = (el.forEach) ? el : this.toArray(el)\n    c = this.toArray(c)\n    el.forEach((el) => {\n      c.forEach((c) => {\n        el.classList.toggle(c)\n      })\n    })\n  }\n\n  /**\n   * Find the closest parent element based on class. This is different from the\n   * native .closest() method in that it doesn\"t check the current element.\n   * ---\n   * @param {Node} el - Element to start search on\n   * @param {String || Array} c - Class(es) to check for\n   * @return {Node} - Closest parent element\n   */\n  static closest(el, c) {\n    while ((el = el.parentElement) && !this.hasClass(el, c))\n      return el\n  }\n\n  /**\n   * Converts a string or object to an array. If an array is passed, it\"s\n   * returned as is. Anything else is returned as an array.\n   * ---\n   * @param {Object} item - String or object to convert to an array\n   * @return {Array} - Return the converted array\n   */\n  static toArray(item) {\n\n    let array = []\n\n    if (Array.isArray(item)) {\n      array = item\n    } else {\n      array.push(item)\n    }\n\n    return array\n  }\n\n  /**\n   * Merge two or more objects. Returns a new object. Set the first argument\n   * to `true` for a deep or recursive merge.\n   * ---\n   * @param {Boolean} [Optional] - If true, do a deep (or recursive) merge\n   * @param {Object} - The objects to merge together; each overriding the next\n   * @returns {Object} - Merged values of defaults and options\n   */\n  /* global extend */\n  static extend() {\n\n    let extended = {}\n    let deep = false\n    let i = 0\n    let length = arguments.length\n\n    if ( Object.prototype.toString.call( arguments[0] ) === \"[object Boolean]\" ) {\n      deep = arguments[0]\n      i++\n    }\n\n    let merge = ( obj ) => {\n      for ( let prop in obj ) {\n        if ( Object.prototype.hasOwnProperty.call( obj, prop ) ) {\n          if ( deep && Object.prototype.toString.call(obj[prop]) === \"[object Object]\" ) {\n            extended[prop] = extend( true, extended[prop], obj[prop] )\n          } else {\n            extended[prop] = obj[prop]\n          }\n        }\n      }\n    }\n\n    for ( ; i < length; i++ ) {\n      let obj = arguments[i]\n      merge(obj)\n    }\n\n    return extended\n  }\n\n}\n"
  ]
}