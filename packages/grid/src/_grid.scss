@use "@vrembem/core";
@use "@vrembem/core/css";
@use "./variables" as var;

#{core.bem("grid")} {
  display: grid;
  gap: css.get("grid", "gap-y", "gap") css.get("grid", "gap-x", "gap");
  grid-template-columns: repeat(css.get("grid", "columns"), minmax(0, 1fr));
  grid-auto-flow: row dense;
}

/// Grid Column Modifiers

/// grid_columns_[i]
@for $i from 2 through var.$columns {
  #{core.bem("grid", null, "columns", $i)} {
    @include css.override("grid", "columns", $i);
  }
}

/// [bp]:grid_columns_[i]
@each $key, $value in var.$breakpoints {
  @include core.media-min($value) {
    @for $i from 2 through var.$columns {
      #{core.bem("#{$key}\\:grid", null, "columns", $i)} {
        @include css.override("grid", "columns", $i);
      }
    }
  }
}

/// Grid Span Utilities

.col-auto {
  grid-column: auto;
}

.col-span-full {
  grid-column: span css.get("grid", "columns");
}

@for $i from 2 through var.$columns {
  .col-span-#{$i} {
    grid-column: span $i;
  }
}

@each $key, $value in var.$breakpoints {
  @include core.media-min($value) {
    .#{$key}\:col-auto {
      grid-column: auto;
    }

    .#{$key}\:col-span-full {
      grid-column: span css.get("grid", "columns");
    }

    @for $i from 2 through var.$columns {
      .#{$key}\:col-span-#{$i} {
        grid-column: span $i;
      }
    }
  }
}
