@use "@vrembem/core";
@use "@vrembem/core/css";

$_thumb-size: calc(css.get("switch", "track-size") - calc(css.get("switch", "border-width") * 2));

#{core.bem("switch")} {
  position: relative;
  display: inline-flex;
  flex: 0 0 auto;
  align-items: center;
  justify-content: center;
  padding-right: calc(css.get("switch", "size") * 0.25);
  padding-left: calc(css.get("switch", "size") * 0.25);
  vertical-align: middle;
}

#{core.bem("switch", "background")} {
  @include core.size(css.get("switch", "size"));
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;

  &::after {
    @include core.size(css.get("switch", "size"));
    content: "";
    position: absolute;
    top: 0;
    left: calc(calc(css.get("switch", "size") * 0.25) * -1);
    transition: left css.get("switch", "transition-duration") css.get("switch", "transition-timing-function");
    border-radius: css.get("switch", "background-border-radius");
    background-color: hsl(from css.get("switch", "background-color") h s l / css.get("switch", "background-opacity"));
  }
}

#{core.bem("switch", "track")} {
  @include core.size(100%, css.get("switch", "track-size"));
  position: relative;
  display: block;
  border: css.get("switch", "border-width") solid css.get("switch", "border-color");
  border-radius: css.get("switch", "border-radius");
  background-color: css.get("switch", "track-fill");
}

#{core.bem("switch", "thumb")} {
  @include core.size($_thumb-size);
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  display: block;
  transition: left css.get("switch", "transition-duration") css.get("switch", "transition-timing-function");
  border-radius: css.get("switch", "border-radius");
  background-color: css.get("switch", "thumb-fill");
  box-shadow: 0 0 0 css.get("switch", "border-width") css.get("switch", "border-color");
}

#{core.bem("switch", "native")} {
  @include core.size(100%);
  position: absolute;
  z-index: 2;
  top: 0;
  left: 0;
  opacity: 0;
  cursor: pointer;

  &:hover + #{core.bem("switch", "background")} {
    &::after {
      background-color: hsl(from css.get("switch", "background-color") h s l / css.get("switch", "background-opacity-hover"));
    }

    #{core.bem("switch", "track")} {
      border-color: css.get("switch", "border-color");
      background-color: css.get("switch", "track-fill");
    }

    #{core.bem("switch", "thumb")} {
      box-shadow: 0 0 0 css.get("switch", "border-width") css.get("switch", "color");
    }
  }

  &:focus + #{core.bem("switch", "background")} {
    &::after {
      background-color: hsl(from css.get("switch", "background-color") h s l / css.get("switch", "background-opacity-focus"));
    }

    #{core.bem("switch", "track")} {
      border-color: css.get("switch", "border-color");
      background-color: css.get("switch", "track-fill");
    }

    #{core.bem("switch", "thumb")} {
      box-shadow: 0 0 0 css.get("switch", "border-width") css.get("switch", "color");
    }
  }

  &:focus-visible + #{core.bem("switch", "background")},
  &:active + #{core.bem("switch", "background")} {
    &::after {
      background-color: hsl(from css.get("switch", "background-color") h s l / css.get("switch", "background-opacity-active"));
    }

    #{core.bem("switch", "track")} {
      border-color: css.get("switch", "border-color");
      background-color: css.get("switch", "track-fill");
    }

    #{core.bem("switch", "thumb")} {
      box-shadow: 0 0 0 css.get("switch", "border-width") css.get("switch", "color");
    }
  }

  &:checked + #{core.bem("switch", "background")} {
    &::after {
      left: calc(100% - calc(css.get("switch", "size") * 0.75));
    }

    #{core.bem("switch", "track")} {
      border-color: css.get("switch", "color");
      background-color: css.get("switch", "color");
    }

    #{core.bem("switch", "thumb")} {
      left: calc(100% - #{$_thumb-size});
      box-shadow: 0 0 0 css.get("switch", "border-width") css.get("switch", "color");
    }
  }
}
