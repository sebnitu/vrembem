@use "@vrembem/core";
@use "@vrembem/core/css";
@use "@vrembem/core/palette";
@use "./variables" as var;

#{core.bem("modal")} {
  position: fixed;
  z-index: css.get("modal", "z-index", var.$z-index);
  top: 0;
  right: 0;
  display: flex;
  visibility: hidden;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 0;
  height: 0;
  overflow: hidden;

  &::before {
    content: "";
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    background-color: css.get("modal", "screen-background", var.$screen-background);
    opacity: 0;
  }
}

#{core.bem("modal", "dialog")} {
  @include core.focus-ring-base();
  width: css.get("modal", "width", var.$width);
  max-width: css.get("modal", "max-width", var.$max-width);
  overflow: auto;
  transform: translateY(calc(css.get("modal", "travel", var.$travel) * -1));
  transition-property: outline;
  transition-duration: css.get("modal", "transition-duration");
  transition-timing-function: css.get("modal", "transition-timing-function");
  box-shadow: css.get("modal", "shadow", var.$shadow);
  opacity: 0;

  &:focus-visible {
    @include core.focus-ring("modal", var.$focus-ring-color, var.$focus-ring-opacity);
  }

  &[role="alertdialog"]:focus {
    @include core.focus-ring("modal", var.$focus-ring-color-alert, var.$focus-ring-opacity);
  }
}

#{core.bem("modal")}.is-closed {
  visibility: hidden;
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-opened,
#{core.bem("modal")}.is-closing {
  visibility: visible;
  width: 100%;
  height: 100%;
  padding: css.get("modal", "screen-padding", var.$screen-padding);
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-closing {
  &::before {
    transition: opacity css.get("modal", "transition-duration", var.$transition-duration) css.get("modal", "transition-timing-function", var.$transition-timing-function);
  }

  #{core.bem("modal", "dialog")} {
    transition-property: opacity, transform;
    transition-duration: css.get("modal", "transition-duration", var.$transition-duration);
    transition-timing-function: css.get("modal", "transition-timing-function", var.$transition-timing-function);
  }
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-opened {
  &::before {
    opacity: css.get("modal", "screen-opacity", var.$screen-opacity);
  }

  #{core.bem("modal", "dialog")} {
    transform: translateY(0);
    opacity: 1;
  }
}

#{core.bem("modal")}.is-closing #{core.bem("modal", "dialog")} {
  transform: translateY(calc(css.get("modal", "travel", var.$travel) * -1));
}
