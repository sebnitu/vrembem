@use "@vrembem/core";
@use "@vrembem/core/css";
@use "@vrembem/core/palette";
@use "./variables" as var;

/**
 * Modal
 */

#{core.bem("modal")} {
  align-items: center;
  display: flex;
  flex-direction: column;
  height: 0;
  justify-content: center;
  overflow: hidden;
  position: fixed;
  right: 0;
  top: 0;
  visibility: hidden;
  width: 0;
  z-index: css.get("modal", "z-index", var.$z-index);

  &::before {
    background-color: css.get("modal", "screen-color", css.get("screen-color"));
    content: "";
    height: 100%;
    inset: 0;
    opacity: 0;
    position: absolute;
    width: 100%;
  }
}

#{core.bem("modal", "dialog")} {
  @include css.override("dialog", var.$dialog-override);

  max-width: css.get("modal", "max-width", var.$max-width);
  opacity: 0;
  overflow: auto;
  transform: translateY(calc(css.get("modal", "travel", var.$travel) * -1));
  transition-duration: css.get("modal", "transition-duration", var.$transition-duration);
  transition-timing-function: css.get("modal", "transition-timing-function", var.$transition-timing-function);
  width: css.get("modal", "width", var.$width);
}

/**
 * State classes
 */

#{core.bem("modal")}.is-closed {
  visibility: hidden;
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-opened,
#{core.bem("modal")}.is-closing {
  height: 100%;
  padding: css.get("modal", "screen-padding", css.get("screen-padding"));
  visibility: visible;
  width: 100%;
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-closing {
  &::before {
    transition: opacity css.get("modal", "transition-duration", var.$transition-duration) css.get("modal", "transition-timing-function", var.$transition-timing-function);
  }

  #{core.bem("modal", "dialog")} {
    transition-duration: css.get("modal", "transition-duration", var.$transition-duration);
    transition-property: opacity, transform;
    transition-timing-function: css.get("modal", "transition-timing-function", var.$transition-timing-function);
  }
}

#{core.bem("modal")}.is-opening,
#{core.bem("modal")}.is-opened {
  &::before {
    opacity: css.get("modal", "screen-opacity", css.get("screen-opacity"));
  }

  #{core.bem("modal", "dialog")} {
    opacity: 1;
    transform: translateY(0);
  }
}

#{core.bem("modal")}.is-closing #{core.bem("modal", "dialog")} {
  transform: translateY(calc(css.get("modal", "travel", var.$travel) * -1));
}
