@use "sass:list";
@use "@vrembem/core";
@use "@vrembem/core/css";
@use "@vrembem/core/palette";
@use "@vrembem/core/theme";

// Form control fallbacks
// TODO: Maybe move these into a "form-control" mixin.
// $size: css.get("form-control-size") !default;
// $font-size: css.get("form-control-font-size") !default;
// $line-height: css.get("form-control-line-height") !default;
// $padding: core.minus-border-width(core.$form-control-padding, css.get("form-control-border-width")) !default;
// $border-width: css.get("form-control-border-width") !default;
// $border-radius: css.get("form-control-border-radius") !default;
// $transition-property: css.get("form-control-transition-property") !default;
// $transition-duration: css.get("form-control-transition-duration") !default;
// $transition-timing-function: css.get("form-control-transition-timing-function") !default;

// Appearance
// TODO: User SCSS vars to set fallbacks and CSS vars for the overrides. E.g:
//   background: css.get("button", "background", var.$background);
// This should allow me to use Sass to set more complex default styles while
// still allowing every state of a form-control to be overridden via CSS vars.
// SCSS vars could include: background, foreground and color/accent. Maybe set
// these as `hs` values or a string matching a palette value?
// TODO: Use relative values to adjust provided color/accent.
$accent: palette.get("primary") !default;

// Set accent custom property
@include css.set("button", "accent", palette.get("primary"));

$background: transparent !default;
$background-hover: $background !default;
$background-focus: $background !default;
$background-focus-visible: $background !default;
$background-active: $background !default;

$foreground: css.get("foreground") !default;
$foreground-hover: $foreground !default;
$foreground-focus: $foreground !default;
$foreground-focus-visible: $foreground !default;
$foreground-active: $foreground !default;

$border-color: css.get("border-color-dark") !default;
$border-color-hover: css.get("border-color-darker") !default;
$border-color-focus: $border-color-hover !default;
$border-color-focus-visible: $accent !default;
$border-color-active: $foreground-active !default;

$box-shadow: 0 0 0 0 hsl(from css.get("button", "accent") h s l / 0%) !default;
$box-shadow-hover: $box-shadow !default;
$box-shadow-focus: $box-shadow !default;
$box-shadow-focus-visible: 0 0 0 0.25rem hsl(from css.get("button", "accent") h s l / 50%) !default;
$box-shadow-active: $box-shadow !default;

// Unique
$gap: 0.5rem !default;

// State: disabled
$disabled-opacity: 0.6 !default;

// State: loading
$loading-size: 1em !default;
$loading-border: 2px solid !default;
$loading-border-color: css.get("foreground") !default;
$loading-animation-duration: 0.6s !default;
$loading-animation-timing-function: linear !default;

// Modifier: button_icon
$icon-padding: core.minus-border-width(core.$form-control-padding-y, css.get("form-control-border-width"));

// Modifier: button_size_sm
$size-sm-font-size: css.get("form-control-font-size-sm") !default;

// Modifier: button_size_lg
$size-lg-font-size: css.get("form-control-font-size-lg") !default;
