@use "@vrembem/core";
@use "./variables" as var;

$_v: var.$prefix-variable;
$_b: var.$prefix-block;

.#{$_b}button {
  position: relative;
  display: inline-flex;
  gap: core.css-var("button-gap");
  align-items: center;
  justify-content: center;
  min-width: core.css-var("button-size");
  height: core.css-var("button-size");
  padding: core.css-var("button-padding");
  transition-property: var.$transition-property;
  transition-duration: var.$transition-duration;
  transition-timing-function: var.$transition-timing-function;
  outline: none;
  border: core.css-var("button-border");
  border-radius: core.css-var("button-border-radius");
  background: core.css-var("button-background");
  background-clip: border-box;
  box-shadow: core.css-var("button-box-shadow");
  color: core.css-var("button-foreground");
  font-family: inherit;
  font-size: core.css-var("button-font-size");
  font-weight: core.css-var("button-font-weight");
  line-height: core.css-var("button-line-height");
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;

  &:disabled:not(.is-loading) {
    opacity: var.$disabled-opacity;
    pointer-events: none;
  }

  &:hover {
    border-color: var.$border-color-hover;
    background-color: var.$background-hover;
    box-shadow: var.$box-shadow-hover;
    color: var.$foreground-hover;
  }

  &:focus {
    border-color: var.$border-color-focus;
    background-color: var.$background-focus;
    box-shadow: var.$box-shadow-focus;
    color: var.$foreground-focus;
  }

  &:active {
    border-color: var.$border-color-active;
    background-color: var.$background-active;
    box-shadow: var.$box-shadow-active;
    color: var.$foreground-active;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;

    &::after {
      @include core.size(var.$loading-size);
      content: "";
      position: absolute;
      top: calc(50% - (#{var.$loading-size} * 0.5));
      left: calc(50% - (#{var.$loading-size} * 0.5));
      animation: spin var.$loading-animation-duration infinite linear;
      border: var.$loading-border;
      border-radius: core.$border-radius-circle;
      border-color: core.set-border-color(var.$loading-border-tpl, var.$loading-border-color);
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
