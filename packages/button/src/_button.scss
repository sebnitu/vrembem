@use "@vrembem/core";
@use "./variables" as var;

$_v: var.$prefix-variable;

.#{var.$prefix-block}button {
  --#{$_v}button-theme: #{core.get-hs(var.$theme)};
  @include core.gap(var.$gap, "x");
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  min-width: var.$size;
  height: var.$size;
  padding: var.$padding;
  transition-property: var.$transition-property;
  transition-duration: var.$transition-duration;
  transition-timing-function: var.$transition-timing-function;
  outline: none;
  border: var.$border core.vars($_v, "button-border-color", transparent);
  border-radius: var(--#{$_v}button-border-radius, var.$border-radius);
  background: core.vars($_v, "button-background", hsla(var(--#{$_v}button-theme), 50%, 0));
  background-clip: border-box;
  box-shadow: core.vars($_v, "button-shadow", transparent);
  color: core.vars($_v, "button-foreground", hsl(var(--#{$_v}button-theme), 50%));
  font-family: inherit;
  font-size: var.$font-size;
  font-weight: var.$font-weight;
  line-height: var.$line-height;
  text-decoration: none;
  white-space: nowrap;
  cursor: pointer;

  &:hover {
    border-color: core.vars($_v, "button-border-color-hover", transparent);
    background: core.vars($_v, "button-background-hover", hsla(var(--#{$_v}button-theme), 50%, 0.1));
    box-shadow: core.vars($_v, "button-shadow-hover", transparent);
    color: core.vars($_v, "button-foreground-hover", hsl(var(--#{$_v}button-theme), 40%));
  }

  &:focus {
    border-color: core.vars($_v, "button-border-color-focus", transparent);
    background: core.vars($_v, "button-background-focus", hsla(var(--#{$_v}button-theme), 50%, 0.1));
    box-shadow: core.vars($_v, "button-shadow-focus", transparent);
    color: core.vars($_v, "button-foreground-focus", hsl(var(--#{$_v}button-theme), 40%));
  }

  &:active {
    border-color: core.vars($_v, "button-border-color-active", transparent);
    background: core.vars($_v, "button-background-active", hsla(var(--#{$_v}button-theme), 50%, 0.2));
    box-shadow: core.vars($_v, "button-shadow-active", transparent);
    color: core.vars($_v, "button-foreground-active", hsl(var(--#{$_v}button-theme), 40%));
  }

  &:disabled:not(.is-loading) {
    opacity: var.$disabled-opacity;
    pointer-events: none;
  }

  &.is-loading {
    color: transparent !important;
    pointer-events: none;

    &::after {
      @include core.size(var.$loading-size);
      content: "";
      position: absolute;
      top: calc(50% - (#{var.$loading-size} * 0.5));
      left: calc(50% - (#{var.$loading-size} * 0.5));
      animation: spin var.$loading-animation-duration infinite linear;
      border: var.$loading-border;
      border-radius: core.$border-radius-circle;
      border-color: core.set-border-color(var.$loading-border-tpl, var.$loading-border-color);
    }
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}
